spring:
  # DataSource Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/book_social_network
    username: username
    password: password
    driver-class-name: org.postgresql.Driver

  # JPA & Hibernate Configuration
  jpa:
    # Hibernate DDL Mode (update will auto-update the schema)
    hibernate:
      ddl-auto: update
    show-sql: false  # Set to true if you want SQL logs in the console
    properties:
      hibernate:
        format_sql: true  # Format SQL for better readability
    database: postgresql  # Set database type
    database-platform: org.hibernate.dialect.PostgreSQLDialect  # Correct dialect for PostgreSQL

  # Mail Configuration (for sending emails)
  mail:
    host: ${EMAIL_HOSTNAME}  # Mail server host (e.g., MailHog for local dev)
    port: 465  # SMTP port (1025 for MailHog)
    username: ${EMAIL_USER_NAME}  # SMTP username (if authentication is required)
    password: ${EMAIL_PASSWORD}  # SMTP password (if authentication is required)
    properties:
      mail:
        smtp:
          auth: true  # Trust all SMTP servers (useful for local testing)
          ssl:
            enable: true
            trust: "*"  # Enable authentication for the mail server
      starttls:
        enable: true  # Enable STARTTLS to secure the connection
    protocol: smtp
application:
  security:
    jwt:
      secret-key: asdy5fjh3490Kdhd234hd7576ftyt76rftf7tfytht756
      expiration: 86400000
  mailing:
    frontend:
      activation-url: http://localhost:4200/activate-account
  cors:
    origins: http://localhost:4200",http://localhost:8080,https://52.221.204.241:8080,https://52.221.204.241:8088
  file:
    upload:
      photos-output-path: ./uploads

server:
  port: 8088
  servlet:
    context-path: /api/v1